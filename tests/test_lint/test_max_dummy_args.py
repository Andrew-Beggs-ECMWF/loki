import pytest
from pathlib import Path

from conftest import generate_report_handler, generate_linter
from loki.lint.rules import MaxDummyArgsRule
from loki.frontend import FP


@pytest.fixture(scope='module')
def refpath():
    return Path(__file__).parent / 'max_dummy_args.f90'


@pytest.mark.parametrize('frontend, max_num_arguments, passes', [
    (FP, 10, True),
    (FP, 8, True),
    (FP, 7, False),
    (FP, 1, False)])
def test_max_dummy_args(refpath, frontend, max_num_arguments, passes):
    '''Test for different maximum allowed number of dummy arguments and
    content of messages generated by MaxDummyArgsRule.'''
    handler = generate_report_handler()
    config = {'MaxDummyArgsRule': {'max_num_arguments': max_num_arguments}}
    _ = generate_linter(refpath, [MaxDummyArgsRule], config=config,
                        frontend=frontend, handlers=[handler])

    assert len(handler.target.messages) == 0 if passes else 1
    assert all(all(keyword in msg for keyword in (
        'MaxDummyArgsRule', '[3.6]', '8', str(max_num_arguments),
        'routine_max_dummy_args')) for msg in handler.target.messages)
